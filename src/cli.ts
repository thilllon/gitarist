#!/usr/bin/env node

/* eslint-disable no-useless-escape */

import chalk from 'chalk';
import { Command } from 'commander';
import { mkdirSync, writeFileSync } from 'fs';
import path from 'path';
import packageJson from '../package.json';
import { Templates } from './gitarist.template';
import { runner } from './runner';

/**
 * Generated by figlet
 * https://www.npmjs.com/package/figlet
 */
const logo = `
          _ __             _      __ 
   ____ _(_) /_____ ______(_)____/ /_
  / __ \`/ / __/ __ \`/ ___/ / ___/ __/
 / /_/ / / /_/ /_/ / /  / (__  ) /_
 \__, /_/\__/\__,_/_/  /_/____/\__/
/____/
`;

console.log(logo);

const program = new Command();

program
  .name(packageJson.name)
  .description(packageJson.description)
  .version(packageJson.version);

program
  .command('generate')
  .alias('g')
  .description('generate gitarist project')
  .argument('[dir]', 'directory to create [default: .]', '.')
  .action(async (dir = '.') => {
    initCmd(dir);

    writeFileSync(
      path.join(process.cwd(), dir, 'package.json'),
      Templates.getPackageJsonTemplate(dir)
    );
    writeFileSync(
      path.join(process.cwd(), dir, 'README.md'),
      Templates.getReadmeTemplate(dir)
    );

    console.log(
      `\nCreated at ` + chalk.greenBright.bold(path.join(process.cwd(), dir))
    );
  });

const initCmd = (dir = '') => {
  const workflowDir = path.join(process.cwd(), dir, '.github', 'workflows');
  mkdirSync(workflowDir, { recursive: true });

  writeFileSync(
    path.join(workflowDir, 'gitarist.yml'),
    Templates.getActionTemplate(),
    { encoding: 'utf8', flag: 'w+' }
  );

  writeFileSync(
    path.join(process.cwd(), dir, '.env'),
    Templates.getEnvTemplate(),
    { encoding: 'utf8', flag: 'a+' }
  );

  console.log(`\nGenerate a secret key settings:`);
  console.log(
    chalk.greenBright.bold(
      `https://github.com/settings/tokens/new?description=GITARIST_TOKEN&scopes=repo,read:packages,read:org,delete_repo,workflow`
    )
  );

  console.log(`\nRegister the secret key to action settings:`);
  console.log(
    chalk.greenBright.bold(`https://github.com/<USERNAME>/${dir}/settings/new`)
  );
};

program
  .command('init')
  .description('initialize')
  .action(() => {
    initCmd();
  });

program
  .command('run')
  .description('run gitarist suite')
  .option(
    '-t,--token <string>',
    'Github token(https://github.com/settings/tokens/new?description=GITARIST_TOKEN&scopes=repo,read:packages,read:org,delete_repo,workflow)'
  )
  .option('-o,--owner <string>', 'Githb owner')
  .option('-r,--repo <string>', 'Github repository')
  .action((options) => {
    const owner = (process.env.GITARIST_OWNER = options.owner);
    const repo = (process.env.GITARIST_REPO = options.repo);
    const token = (process.env.GITARIST_TOKEN = options.token);

    if (!owner) {
      throw new Error(
        'Missing required environment variables: "GITARIST_OWNER"'
      );
    }
    if (!repo) {
      throw new Error(
        'Missing required environment variables: "GITARIST_REPO"'
      );
    }
    if (!token) {
      throw new Error(
        'Missing required environment variables: "GITARIST_TOKEN"'
      );
    }

    runner();
  });

program.parse();
